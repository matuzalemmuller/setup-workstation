- name: "Disable console freeze in /home/{{ username }}/.bashrc"
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Disable console freeze"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      # disable tmux freeze + ssh fix: https://stackoverflow.com/questions/24623021/getting-stty-standard-input-inappropriate-ioctl-for-device-when-using-scp-thro
      [[ $- == *i* ]] && /usr/bin/stty -ixon

- name: Add /usr/sbin to PATH in /home/{{ username }}/.bashrc
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Add /usr/sbin to PATH"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      export PATH="$PATH:/usr/sbin"

- name: Add ls aliases to /home/{{ username }}/.bashrc
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Add ls aliases"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      alias la='ls -la'
      alias ll='ls -lh'

- name: Add various aliases to /home/{{ username }}/.bashrc
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Add various aliases"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      alias cpv='rsync -ah --info=progress2'
      alias grep='grep --color=auto'
      alias nettop='sudo /usr/local/bin/nettop'
      alias virsh='sudo virsh'
      alias cnf='command-not-found'
      alias usb-transfer-status='watch grep -e Dirty: -e Writeback: /proc/meminfo'
      alias proxmox='ssh root@10.0.0.200'
      alias hetzner='ssh root@10.8.0.2'

- name: Add helm auto-completion to /home/{{ username }}/.bashrc
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Add helm autocomplete"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      source <(helm completion bash)

- name: Add kubectl auto-completion to /home/{{ username }}/.bashrc
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Add kubectl autocomplete"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      source <(kubectl completion bash)
      alias k=kubectl
      complete -o default -F __start_kubectl k

- name: Add terraform auto-completion to /home/{{ username }}/.bashrc
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Add terraform autocomplete"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      complete -C /usr/bin/terraform terraform

- name: Add k3d auto-completion and alias to /home/{{ username }}/.bashrc
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Add k3d autocomplete"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      source <(k3d completion bash)
      alias k3d-create-cluster='k3d cluster create mycluster --agents 1 -p "30000-30050:30000-30050@loadbalancer"'
      alias k3d-stop-cluster='k3d cluster stop mycluster'
      alias k3d-start-cluster='k3d cluster start mycluster'

- name: Add kind auto-completion and aliases to /home/{{ username }}/.bashrc
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Add kind autocomplete"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      source <(kind completion bash)
      alias kind-create-cluster-full="kind create cluster --config /home/{{ username }}/.kube/kind-cluster-config-full.yaml"
      alias kind-create-cluster-quick="kind create cluster --config /home/{{ username }}/.kube/kind-cluster-config-quick.yaml"

- name: Add qfc sourcing to /home/{{ username }}/.bashrc
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Add qfc sourcing"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      [[ -s "$HOME/.qfc/bin/qfc.sh" ]] && source "$HOME/.qfc/bin/qfc.sh"

- name: Increase default bash history (HISTFILESIZE)
  lineinfile:
    path: "/home/{{ username }}/.bashrc"
    regexp: '^HISTFILESIZE='
    line: 'HISTFILESIZE=10000'

- name: Sync history across open sessions
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Sync history across open sessions"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      export PROMPT_COMMAND="history -a; history -n"

- name: Use ydiff for git diff and difftool for individual files
  become: true
  become_user: "{{ username }}"
  blockinfile:
    marker: "## {mark} Replace git diff"
    path: "/home/{{ username }}/.bashrc"
    insertafter: "EOF"
    block: |
      git() {
        if [ "$1" == "diff" ];  then
            if [ "$#" -eq 1 ]; then
                /opt/ydiff/ydiff.py -s
            else
                /usr/bin/git difftool --tool=vimdiff -y $2
            fi
        else
            /usr/bin/git "$@"
        fi
      }
